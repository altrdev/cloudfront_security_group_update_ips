---
AWSTemplateFormatVersion: "2010-09-09"
Transform: 'AWS::Serverless-2016-10-31'
Description: Resources for update Cloudfront whitelist IPs
Metadata:
  AWS::ServerlessRepo::Application:
    Name: cloudfront-security-group-update-ips
    Description: Update a security group with cloudfront whitelist IPs
    Author: Alessandro Travi
    SpdxLicenseId: MIT
    LicenseUrl: ../LICENSE
    ReadmeUrl: ../README.md
    Labels: ['cloudfront', 'whitelist', 'securitygroup']
    HomePageUrl: https://github.com/coast-ch/cloudfront_security_group_update_ips
    SemanticVersion: 0.0.1
    SourceCodeUrl: https://github.com/coast-ch/cloudfront_security_group_update_ips

Resources:
  CloudfrontLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "Cloudfront_lambda_ips_whitelist_role"
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole

  CloudfrontLambdaPolicy:
    DependsOn: CloudfrontLambdaRole
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: "Cloudfront_lambda_ips_whitelist"
      Roles:
        - !Ref CloudfrontLambdaRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: "logs:CreateLogGroup"
            Resource: "arn:aws:logs:*:*:*"
          - Effect: Allow
            Action: "logs:CreateLogStream"
            Resource: "arn:aws:logs:*:*:*"
          - Effect: Allow
            Action: "logs:PutLogEvents"
            Resource: "arn:aws:logs:*:*:*"
          - Effect: Allow
            Action: "ec2:DescribeSecurityGroups"
            Resource: "*"
          - Effect: Allow
            Action: "ec2:AuthorizeSecurityGroupIngress"
            Resource: "*"
          - Effect: Allow
            Action: "ec2:RevokeSecurityGroupIngress"
            Resource: "*"

  CloudfrontLambdaFunction:
    DependsOn: CloudfrontLambdaRole
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: "Cloudfront_lambda_ips_whitelist"
      Handler: "cloudfront_ips_whitelist.lambda_handler"
      CodeUri: "./"
      Timeout: 10
      Runtime: python2.7
      Role: !GetAtt [ CloudfrontLambdaRole, Arn ]

  SNSSubscription:
    DependsOn: CloudfrontLambdaFunction
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !GetAtt [ CloudfrontLambdaFunction, Arn ]
      Protocol: "lambda"
      Region: "us-east-1"
      TopicArn: "arn:aws:sns:us-east-1:806199016981:AmazonIpSpaceChanged"

  LambdaPermission:
    DependsOn: CloudfrontLambdaFunction
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt [ CloudfrontLambdaFunction, Arn ]
      Action: "lambda:InvokeFunction"
      Principal: "sns.amazonaws.com"
      SourceArn: "arn:aws:sns:us-east-1:806199016981:AmazonIpSpaceChanged"
